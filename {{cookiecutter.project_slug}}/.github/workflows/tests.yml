name: Testing {{cookiecutter.project_slug}}

on: push

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run black check
        run: poetry run black --check .
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run flake8 check
        run: poetry run flake8 --count .
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run mypy check
        run: poetry run mypy .
  pytest:
    runs-on: ubuntu-latest
    {%- if ((cookiecutter.db_info.name != "none" and cookiecutter.db_info.name != "sqlite") or
          (cookiecutter.enable_rmq == "True") or
          (cookiecutter.enable_kafka == "True")) %}
    services:
      {%- if cookiecutter.db_info.name != "none" and cookiecutter.db_info.name != "sqlite" %}

      {{cookiecutter.project_slug}}-db:
        image: {{ cookiecutter.db_info.image }}
        env:
          {%- if cookiecutter.db_info.name == "postgresql" %}
          POSTGRES_PASSWORD: {{ cookiecutter.project_slug }}
          POSTGRES_USER: {{ cookiecutter.project_slug }}
          POSTGRES_DB: {{ cookiecutter.project_slug }}
          {%- endif %}
          {%- if cookiecutter.db_info.name == "mysql" %}
          MYSQL_ROOT_PASSWORD: "{{ cookiecutter.project_slug }}"
          MYSQL_ROOT_USER: "{{ cookiecutter.project_slug }}"
          MYSQL_DATABASE: "{{ cookiecutter.project_slug }}"
          MYSQL_AUTHENTICATION_PLUGIN: "mysql_native_password"
          {%- endif %}
        {%- if cookiecutter.db_info.name == "mysql" %}
        options: >-
          --health-cmd="mysqladmin ping -u root"
          --health-interval=15s
          --health-timeout=5s
          --health-retries=6
        {%- endif %}
        {%- if cookiecutter.db_info.name == "postgresql" %}
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        {%- endif %}
        ports:
          - {{ cookiecutter.db_info.port }}:{{ cookiecutter.db_info.port }}
        {%- endif %}
      {%- if cookiecutter.enable_rmq == "True" %}

      {{cookiecutter.project_slug}}-rmq:
        image: rabbitmq:3.9.16-alpine
        env:
          RABBITMQ_DEFAULT_USER: "guest"
          RABBITMQ_DEFAULT_PASS: "guest"
          RABBITMQ_DEFAULT_VHOST: "/"
        options: >-
          --health-cmd="rabbitmq-diagnostics check_running -q"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=8
        ports:
          - 5672:5672
      {%- endif %}
      {%- if cookiecutter.enable_kafka == "True" %}

      {{cookiecutter.project_slug}}-zookeeper:
        image: "bitnami/zookeeper:3.7.1"
        env:
          ALLOW_ANONYMOUS_LOGIN: "yes"
          ZOO_LOG_LEVEL: "ERROR"
        options: >-
          --health-cmd="zkServer.sh status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=8

      {{cookiecutter.project_slug}}-kafka:
        image: bitnami/kafka:3.2.0
        env:
          KAFKA_BROKER_ID: "1"
          ALLOW_PLAINTEXT_LISTENER: "yes"
          KAFKA_CFG_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
          KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
          KAFKA_CFG_ZOOKEEPER_CONNECT: "{{cookiecutter.project_slug}}-zookeeper:2181"
        options: >-
          --health-cmd="kafka-topics.sh --list --bootstrap-server localhost:9092"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=8
        ports:
          - 9092:9092
      {%- endif %}
    {%- endif %}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install deps
        uses: knowsuchagency/poetry-install@v1
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - name: Run pytest check
        run: poetry run pytest -vv --cov="{{cookiecutter.project_slug}}" .
        env:
          {{ cookiecutter.project_slug | upper }}_HOST: "0.0.0.0"
        {%- if cookiecutter.db_info.name != "none" %}
        {%- if cookiecutter.db_info.name != "sqlite" %}
          {{ cookiecutter.project_slug | upper }}_DB_HOST: localhost
        {%- endif %}
        {%- endif %}
        {%- if cookiecutter.enable_rmq == "True" %}
          {{ cookiecutter.project_slug | upper }}_RABBIT_HOST: localhost
        {%- endif %}
        {%- if cookiecutter.enable_kafka == "True" %}
          {{ cookiecutter.project_slug | upper }}_KAFKA_BOOTSTRAP_SERVERS: '["localhost:9092"]'
        {%- endif %}

